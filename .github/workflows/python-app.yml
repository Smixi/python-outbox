# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  build:

    services:
    # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'poetry'
    - name: Install modules through poetry
      run: poetry install
    - name: Run Pytest
      run: poetry run pytest
      env:
        # The hostname used to communicate with the PostgreSQL service container
        POSTGRES_HOST: localhost
        # The default PostgreSQL port
        POSTGRES_PORT: 5432
        POSTGRES_PASSWORD: postgres
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Check isort
      run: |
        poetry run isort . --check
    - name: Build and publish to pypi
      uses: JRubics/poetry-publish@v1.13
      with:
        plugins: "poetry-dynamic-versioning-plugin"
        repository_name: "testpipy"
        repository_url: "https://test.pypi.org/legacy/"
        repository_username: "__token__"
        repository_password: ${{ secrets.TESTPYPI_TOKEN }}
